" vim: filetype=vifm :
" vim:foldlevel=0
" vim:foldmethod=marker

"" common config {{{1
set vicmd=vim
set trash

" this is how many directories to store in the directory history.
set history=100

" follow links on l or Enter.
set followlinks

" with this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).
set fastrun

" natural sort of (version) numbers within text.
set sortnumbers

" maximum number of changes that can be undone.
set undolevels=100

" if you installed the vim.txt help file set vimhelp.
" if would rather use a plain text help file set novimhelp.
set novimhelp

" if you would like to run an executable file when you
" press return on the file name set this.
set norunexec

" use KiB, MiB, ... instead of KB, MB, ...
set noiec

" Selected color scheme
colorscheme istib-solarized-dark
highlight CmdLine cterm=none ctermfg=lightwhite ctermbg=black
highlight Directory  cterm=none ctermfg=12    ctermbg=default
highlight CurrLine   cterm=bold ctermfg=white ctermbg=blue

" the FUSE_HOME directory will be used as a root dir for all FUSE mounts.
" unless it exists with write/exec permissions set, vifm will attempt to
" create it.
set fusehome=/tmp/vifm_FUSE

" format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
set timefmt=%m/%d\ %H:%M

" show list of matches on tab complition in command-line mode
set wildmenu

" ignore case in search patterns unless it contains at least one uppercase
" letter
set ignorecase
set smartcase

" don't highlight search results automatically
set nohlsearch

" use increment searching (search while typing)
set incsearch

" try to leave some space from cursor to upper/lower border in lists
set scrolloff=4

" don't do to much requests to slow file systems
set slowfs=curlftpfs

" set custom status line look
set statusline="  %t%= %A %10u:%-7g %15s %20d  "

" What should be saved automatically between vifm runs
" Like in vi
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks

"" marks {{{1
" :mark mark /full/directory/path [filename]
mark B ~/bin/
mark b ~/bookz/
mark h ~/
mark i ~/INBOX/
mark I ~/Изображения/
mark p ~/projects/
mark u /var/run/media/ash/
mark s ~/sshhosts/
mark z ~/.config/vifm
mark d ~/Документы/
mark m ~/Музыка/
mark f ~/Загрузки/
mark D ~/distr/
mark v ~/Видео/
mark r /

"" commands {{{1
" :com[mand] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command df df -h %m 2> /dev/null
command diff vim -d %f %F
command zip zip -r %f.zip %f
command tar tar -czf %f.tar.gz %f
command run !! ./%f
command make !!make
command vgrep vim -c ":grep %a *"
command attachnew attach_to_task -f %d/%f
command attach attach_to_task -t %a -f %d/%f

"" extensions {{{1
" the file type is for the default programs to be used with
" a file extension.

" Pdf
filetype *.pdf zathura %f &,apvlv %f,xpdf %f &
fileview *.pdf pdftotext -nopgbrk %c -

" PostScript
filextype *.ps,*.ps.gz gv %c %i &

" Djvu
filextype *.djvu zathura %f &

" Epub
filextype *.epub,*.fb2,*.mobi FBReader %f &

" Audio
filetype *.wav,*.mp3,*.flac,*.ogg,*.m4a,*.aif
       \ {Play using mpv}
       \ mpv %f,
       \ {Play using ffplay}
       \ ffplay %c,
       \ {Play using MPlayer}
       \ mplayer %f,
fileviewer *.mp3 mp3info

" Video
filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.vob,*.flv,*.webm
        \ {View using mpv}
        \ mpv %f,
        \ {View using vlc}
        \ vlc %f,
        \ {View using mplayer}
        \ mplayer2 %f,
        \ {View using ffplay}
        \ ffplay -fs %c,
        \ {View using Dragon}
        \ dragon %f,
fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.vob
         \ ffprobe -pretty %c 2>&1

" Web
filetype *.html,*.htm elinks,mozilla,uzbl-browser %f %i &

" Object
filetype *.o nm %f | less

" Image
filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm,*.xcf
        \ {View in Pim}
        \ pim,
        \ {View in sxiv}
        \ sxiv,
        \ {View in gpicview}
        \ gpicview %c,
fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm,*.xcf convert -identify %f -verbose /dev/null

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f,

" FuseZipMount
filetype *.zip,*.jar,*.war,*.ear
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ zip -sf %c | less,
       \ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear zip -sf %c

" ArchiveMount
filetype *.tar.bz2,*.tbz2,*.tgz,*.tar.gz
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c

filetype *.rar
       \ {Mount with archivemount}
       \ unrar la %c | less
fileviewer *.rar unrar la %c

" Rar2FsMount
filetype *.rar
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,

" IsoMount
filetype *.iso
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs %PARAM %DESTINATION_DIR

" Fuse7z
filetype *.7z
       \ {Mount with fuse-7z}
       \ 7z l %c | less
       " \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z l %c

" Office files
filextype *.doc,*.docx,*.xls,*.xlsx,*.dbf,*.ods,*.odt,*.odp libreoffice %f &
fileview *.docx, docx2txt.pl %f -

" Qt projects
filextype *.pro qtcreator %f &

" Swf files
filextype *.swf gnash %f &

filetype *.gpx,*.gp5 tuxguitar %f &

" Directories
filextype */
        \ {View in thunar}
        \ Thunar %f &,
fileview .*/,*/ tree %f

filextype *.ymp xdg-open %f &

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
filetype * vim %c

"" mappings {{{1

nmap s :shell<cr>
nmap S :sort<cr>
nmap w :view<cr>
nmap o :!gvim --remote-tab-silent %f<cr>
nmap O :!gvim %f<cr>

" Open file in the background using its default program
nmap gb :file &<cr>l

" Yank current directory path into the clipboard
nmap yd :!echo %d | xclip %i<cr>

" Yank current file path into the clipboard
nmap yf :!echo %c:p | xclip %i<cr>

" Mappings for faster renaming
nmap I cw<c-a>
nmap cc cw<c-u>
nmap A cw<c-w>

" Prepare full remove command
nmap dD :!rm -rf %f

" Copy file with rsync and notify
nmap cP :!rsync -rltzuv --info=progress2 --temp-dir=/tmp/ %f %D; notify-send --app-name=vifm-finished "rsync" "upload finished: %f"<cr>

" Move file with rsync and notify
nmap mv :!rsync -rltzuv --remove-source-files --info=progress2 --temp-dir=/tmp/ %f %D; notify-send --app-name=vifm-finished "rsync" "upload finished: %f"<cr>

" Toggle wrap setting on ,w key
nmap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nmap <f3> :!$PAGER %f<cr>
nmap <f4> :edit<cr>
nmap <f5> :copy<cr>
nmap <f6> :move<cr>
nmap <f7> :mkdir<space>

nmap <C-p> :!tar -czf %f.tar.gz %f<cr>
nmap <a-u> :!extract %f<cr>

nmap <C-h> :!tmux select-pane -L 2> /dev/null &<cr>
nmap <C-j> :!tmux select-pane -D 2> /dev/null &<cr>
nmap <C-k> :!tmux select-pane -U 2> /dev/null &<cr>
nmap <C-l> :!tmux select-pane -R 2> /dev/null &<cr>

nmap ; :
nmap ! :!

cmap <a-k> <Up>
cmap <a-j> <Down>
cmap <a-l> <cr>
cmap <a-h> <bs>

" file types
set classify=' :dir:/, :exe:, :reg:, :link:'
" various file names
set classify+=' ::..::, ::*.sh::, ::*.[hc]pp::, ::*.[hc]::, ::/^copying|license$/::, ::.git,,*.git::, ::*.epub,,*.fb2,,*.djvu::, ::*.pdf::, ::*.htm,,*.html,,**.[sx]html,,*.xml::'
" archives
set classify+=' ::*.7z,,*.ace,,*.arj,,*.bz2,,*.cpio,,*.deb,,*.dz,,*.gz,,*.jar,,*.lzh,,*.lzma,,*.rar,,*.rpm,,*.rz,,*.tar,,*.taz,,*.tb2,,*.tbz,,*.tbz2,,*.tgz,,*.tlz,,*.trz,,*.txz,,*.tz,,*.tz2,,*.xz,,*.z,,*.zip,,*.zoo::'
" images
set classify+=' ::*.bmp,,*.gif,,*.jpeg,,*.jpg,,*.ico,,*.png,,*.ppm,,*.svg,,*.svgz,,*.tga,,*.tif,,*.tiff,,*.xbm,,*.xcf,,*.xpm,,*.xspf,,*.xwd::'
" office files
set classify+=' ::*.doc,,*.docx::, ::*.xls,,*.xls[mx]::, ::*.pptx,,*.ppt::'
